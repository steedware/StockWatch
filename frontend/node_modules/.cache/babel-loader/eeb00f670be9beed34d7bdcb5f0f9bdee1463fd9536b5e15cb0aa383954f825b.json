{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api';const api=axios.create({baseURL:API_BASE_URL});api.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});export const authService={login:async credentials=>{const response=await api.post('/auth/login',credentials);return response.data;},register:async userData=>{const response=await api.post('/auth/register',userData);return response.data;},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('user');},getCurrentUser:()=>{const user=localStorage.getItem('user');return user?JSON.parse(user):null;},isAuthenticated:()=>{return!!localStorage.getItem('token');}};export const watchlistService={getWatchlist:async()=>{const response=await api.get('/watchlist');return response.data;},addStock:async stockData=>{const response=await api.post('/watchlist',stockData);return response.data;},updateStock:async(id,stockData)=>{const response=await api.put(`/watchlist/${id}`,stockData);return response.data;},removeStock:async id=>{await api.delete(`/watchlist/${id}`);}};export const alertService={getAlerts:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;const response=await api.get('/alerts',{params:{page,size}});return response.data;},getUnreadAlerts:async()=>{const response=await api.get('/alerts/unread');return response.data;},getUnreadCount:async()=>{const response=await api.get('/alerts/unread/count');return response.data;},markAsRead:async alertIds=>{await api.put('/alerts/mark-read',alertIds);}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authService","login","credentials","response","post","data","register","userData","logout","removeItem","getCurrentUser","user","JSON","parse","isAuthenticated","watchlistService","getWatchlist","get","addStock","stockData","updateStock","id","put","removeStock","delete","alertService","getAlerts","page","arguments","length","undefined","size","params","getUnreadAlerts","getUnreadCount","markAsRead","alertIds"],"sources":["C:/Users/szymo/Desktop/progr/StockWatch/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport {\r\n  AuthResponse,\r\n  LoginRequest,\r\n  RegisterRequest,\r\n  WatchedStock,\r\n  WatchedStockRequest,\r\n  Alert\r\n} from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authService = {\r\n  login: async (credentials: LoginRequest): Promise<AuthResponse> => {\r\n    const response: AxiosResponse<AuthResponse> = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  register: async (userData: RegisterRequest): Promise<AuthResponse> => {\r\n    const response: AxiosResponse<AuthResponse> = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser: () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n\r\n  isAuthenticated: () => {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n};\r\n\r\nexport const watchlistService = {\r\n  getWatchlist: async (): Promise<WatchedStock[]> => {\r\n    const response: AxiosResponse<WatchedStock[]> = await api.get('/watchlist');\r\n    return response.data;\r\n  },\r\n\r\n  addStock: async (stockData: WatchedStockRequest): Promise<WatchedStock> => {\r\n    const response: AxiosResponse<WatchedStock> = await api.post('/watchlist', stockData);\r\n    return response.data;\r\n  },\r\n\r\n  updateStock: async (id: number, stockData: WatchedStockRequest): Promise<WatchedStock> => {\r\n    const response: AxiosResponse<WatchedStock> = await api.put(`/watchlist/${id}`, stockData);\r\n    return response.data;\r\n  },\r\n\r\n  removeStock: async (id: number): Promise<void> => {\r\n    await api.delete(`/watchlist/${id}`);\r\n  }\r\n};\r\n\r\nexport const alertService = {\r\n  getAlerts: async (page: number = 0, size: number = 20): Promise<Alert[]> => {\r\n    const response: AxiosResponse<Alert[]> = await api.get('/alerts', {\r\n      params: { page, size }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getUnreadAlerts: async (): Promise<Alert[]> => {\r\n    const response: AxiosResponse<Alert[]> = await api.get('/alerts/unread');\r\n    return response.data;\r\n  },\r\n\r\n  getUnreadCount: async (): Promise<number> => {\r\n    const response: AxiosResponse<number> = await api.get('/alerts/unread/count');\r\n    return response.data;\r\n  },\r\n\r\n  markAsRead: async (alertIds: number[]): Promise<void> => {\r\n    await api.put('/alerts/mark-read', alertIds);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}